
//sequential


import logging
import os
from time import time

from download import setup_download_dir, get_links, download_link

logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(name)s - %(levelname)s - %(message)s')
logger = logging.getLogger(_name_)

def main():
    ts = time()
    client_id = os.getenv('IMGUR_CLIENT_ID')
    if not client_id:
        raise Exception("Couldn't find IMGUR_CLIENT_ID environment variable!")
    download_dir = setup_download_dir()
    links = get_links(client_id)
    for link in links:
        download_link(download_dir, link)
    logging.info('Took %s seconds', time() - ts)


//nested
#!/usr/bin/env python# -- coding: utf-8 --import yamldef get_config(*args): with open('config.yaml', 'r') as f:     conf = yaml.load(f)         # get section     section = args[0]     # check if Config file has Section     if not conf.has_key(section):         print "key missing"         quit()     # get values     argList = list(args) # convert tuple to list     argList.pop(0) # remove Section from list        # create lookup path      parsepath = "conf['" + section + "']"        for arg in argList:         parsepath = parsepath + "['" + arg + "']"     return eval(parsepath) f.close()scans = get_config('scanners','hostname','web01.nyc.mycorp.com','scans')print scans

['cisco scan', 'network sec scan', 'windows sec scan']

or if you want a list of all hostnames,

scans = list(get_config('scanners','hostname'))